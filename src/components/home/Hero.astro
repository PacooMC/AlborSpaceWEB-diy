---
import { ArrowRight } from 'lucide-astro';
import { hero } from '../../content/home';
---

<section class="relative h-screen flex items-center justify-center overflow-hidden">
  <!-- Centered content -->
  <div class="container-custom relative z-10 text-center">
    <!-- Hero text now centered with logo styling -->
    <div class="max-w-4xl mx-auto space-y-8 reveal-element">
      <div class="space-y-4">
        <div class="inline-block mb-2 px-3 py-1 rounded-full bg-dark-200/40 backdrop-blur-sm border border-orange-500/20 text-white/70 text-xs tracking-widest uppercase">
          Advancing Space Communication
        </div>
        <h1 class="text-5xl sm:text-6xl md:text-7xl xl:text-8xl font-light tracking-wider leading-none hero-title">
          {/* Added group class for hover effect */}
          <span class="relative block overflow-hidden logo-style group">
            <span class="text-white inline-block hero-text-1 transition-all duration-300 group-hover:text-shadow-orange">ALBOR</span>
            <span class="text-white/30 inline-block ml-2 hero-text-2 transition-colors duration-300 group-hover:text-white/50">SPACE</span>
          </span>
        </h1>
        <p class="text-sm md:text-base text-white/60 max-w-md mx-auto hero-description leading-relaxed mt-8 tracking-wide">
          {hero.description}
        </p>
      </div>

      <div class="pt-8">
        <a href="#technology" class="hero-cta-button group">
          <div class="hero-cta-bg"></div>
          <div class="hero-cta-content">
            <span>{hero.cta}</span>
            <ArrowRight class="w-5 h-5 ml-2 transition-transform duration-500 ease-out transform group-hover:translate-x-1" />
          </div>
        </a>
      </div>
    </div>
  </div>
</section>

<style>
  /* Logo styling to match Logo.astro - Enhanced for Hero hover */
  .logo-style span {
     transition: color 0.3s ease, text-shadow 0.3s ease;
  }

  /* Define the text-shadow using a CSS variable for easier management if needed */
  .group:hover .group-hover\:text-shadow-orange {
     text-shadow: 0 0 15px theme('colors.orange.500 / 50%'); /* Subtle orange glow */
  }

  /* Hero title animations */
  .hero-title {
    position: relative;
    transform: translateZ(0);
    letter-spacing: 0.1em;
    line-height: 1.2;
    text-shadow: 0 0 20px theme('colors.orange.500 / 10%'); /* Base subtle shadow */
  }

  .hero-text-1 {
    animation: textReveal 1.5s cubic-bezier(0.77, 0, 0.175, 1) forwards;
    transform: translateX(-100%);
    opacity: 0;
  }

  .hero-text-2 {
    animation: textReveal 1.5s cubic-bezier(0.77, 0, 0.175, 1) 0.2s forwards;
    transform: translateX(100%);
    opacity: 0;
  }

  .hero-description {
    animation: fadeIn 1.5s ease 0.6s forwards;
    opacity: 0;
  }

  @keyframes textReveal {
    0% { transform: translateX(50%); opacity: 0; }
    100% { transform: translateX(0); opacity: 1; }
  }

  @keyframes fadeIn {
    0% { opacity: 0; transform: translateY(10px); }
    100% { opacity: 1; transform: translateY(0); }
  }

  /* Enhanced hero CTA button */
  .hero-cta-button {
    position: relative;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    padding: 0.75rem 1.5rem;
    overflow: hidden;
    background: transparent;
    border-radius: 0.25rem;
    font-size: 0.75rem;
    font-weight: 300;
    letter-spacing: 0.1em;
    text-transform: uppercase;
    color: rgba(255, 255, 255, 0.9);
    transition: all 0.4s ease;
    animation: fadeIn 1.5s ease 0.8s forwards;
    opacity: 0;
  }

  .hero-cta-bg {
    position: absolute;
    inset: 0;
    background: linear-gradient(90deg, theme('colors.orange.500 / 20%'), theme('colors.orange.700 / 20%'));
    z-index: -1;
    transition: all 0.4s ease;
  }

  .hero-cta-content {
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 1;
  }

  .hero-cta-button::before {
    content: '';
    position: absolute;
    inset: 0;
    background: linear-gradient(90deg, theme('colors.orange.500 / 20%'), theme('colors.orange.700 / 20%'));
    transform: translateX(-100%);
    transition: transform 0.6s ease;
    z-index: -1;
  }

  /* Button border effect using ::after */
  .hero-cta-button::after {
    content: '';
    position: absolute;
    inset: 0;
    border: 1px solid transparent;
    /* Using slightly more opaque orange for the border gradient */
    border-image: linear-gradient(90deg, theme('colors.orange.500 / 60%'), theme('colors.orange.700 / 60%'));
    border-image-slice: 1;
    opacity: 0; /* Start transparent */
    transition: opacity 0.4s ease;
    pointer-events: none;
    border-radius: 0.25rem; /* Match button border-radius */
  }

  .hero-cta-button:hover {
    transform: translateY(-2px);
    box-shadow: 0 8px 20px -5px theme('colors.orange.500 / 30%');
    color: white;
  }

  .hero-cta-button:hover .hero-cta-bg {
    opacity: 0.95;
    background: linear-gradient(90deg, theme('colors.orange.500 / 40%'), theme('colors.orange.700 / 40%'));
  }

  .hero-cta-button:hover::before {
    transform: translateX(0);
  }

  /* Make border visible on hover */
  .hero-cta-button:hover::after {
    opacity: 1;
  }
</style>
