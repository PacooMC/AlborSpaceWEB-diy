---
interface Props {
  className?: string;
}

const { className = '' } = Astro.props;
---

<div class={`relative flex items-center justify-center p-4 lg:p-0 overflow-hidden bg-dark-800/30 diagram-container ${className}`}>
  <div class="w-full max-w-xl mx-auto">
    <div class="payload-diagram">
      <!-- Processing Flow at the top -->
      <div class="processing-flow">
        <div class="flow-unit rf-unit">
          <div class="unit-header">RF</div>
          <div class="unit-label">Radio Unit</div>
          <div class="unit-sublabel">1-6 GHz</div>
        </div>
        
        <div class="flow-arrow arrow-1"></div>
        
        <div class="flow-unit bbp-unit">
          <div class="unit-header">BBP</div>
          <div class="unit-label">Baseband Processing</div>
          <div class="unit-sublabel">5G NR DSP</div>
        </div>
        
        <div class="flow-arrow arrow-2"></div>
        
        <div class="flow-unit pt-unit">
          <div class="unit-header">PT</div>
          <div class="unit-label">Protocol Stack</div>
          <div class="unit-sublabel">Software Defined</div>
        </div>
      </div>

      <!-- Satellite in the center -->
      <div class="satellite">
        <div class="satellite-body"></div>
        <div class="satellite-panels left"></div>
        <div class="satellite-panels right"></div>
        <div class="satellite-antenna"></div>
      </div>

      <!-- Communication beams - centered and shifted right -->
      <div class="beam-container">
        <div class="beam uplink"></div>
        <div class="beam downlink"></div>
      </div>

      <!-- Ground stations at the bottom -->
      <div class="ground-station left">
        <div class="station-icon"></div>
        <div class="station-antenna"></div>
        <div class="station-label">Ground Station</div>
      </div>

      <div class="ground-station right">
        <div class="station-icon"></div>
        <div class="station-antenna"></div>
        <div class="station-label">User Terminal</div>
      </div>
    </div>
  </div>
</div>

<style>
  .diagram-container {
    min-height: 500px;
    border-radius: 0 0.75rem 0.75rem 0;
    overflow: hidden;
    position: relative;
  }

  @media (max-width: 1024px) {
    .diagram-container {
      border-radius: 0 0 0.75rem 0.75rem;
    }
  }

  .payload-diagram {
    position: relative;
    width: 100%;
    height: 500px;
    padding: 20px;
  }

  /* Processing Flow at the top */
  .processing-flow {
    position: absolute;
    top: 8%;
    left: 50%;
    transform: translateX(-50%);
    display: flex;
    align-items: center;
    gap: 15px;
    z-index: 10;
  }

  .flow-unit {
    width: 80px;
    height: 65px;
    border-radius: 8px;
    padding: 8px;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    position: relative;
    transition: all 0.3s ease;
    border: 1px solid rgba(255, 255, 255, 0.1);
  }

  .rf-unit {
    background: linear-gradient(135deg, rgba(233, 69, 96, 0.15), rgba(233, 69, 96, 0.08));
    border-color: rgba(233, 69, 96, 0.3);
  }

  .bbp-unit {
    background: linear-gradient(135deg, rgba(34, 197, 94, 0.15), rgba(34, 197, 94, 0.08));
    border-color: rgba(34, 197, 94, 0.3);
  }

  .pt-unit {
    background: linear-gradient(135deg, rgba(59, 130, 246, 0.15), rgba(59, 130, 246, 0.08));
    border-color: rgba(59, 130, 246, 0.3);
  }

  .unit-header {
    font-size: 14px;
    color: rgba(255, 255, 255, 0.9);
    font-weight: 600;
    margin-bottom: 2px;
  }

  .unit-label {
    font-size: 9px;
    color: rgba(255, 255, 255, 0.7);
    text-align: center;
    line-height: 1.1;
    margin-bottom: 1px;
  }

  .unit-sublabel {
    font-size: 8px;
    color: rgba(255, 255, 255, 0.5);
    text-align: center;
  }

  .flow-arrow {
    width: 12px;
    height: 2px;
    background: linear-gradient(90deg, rgba(255, 255, 255, 0.4), rgba(255, 255, 255, 0.2));
    position: relative;
  }

  .flow-arrow::after {
    content: '';
    position: absolute;
    right: -3px;
    top: 50%;
    transform: translateY(-50%);
    width: 0;
    height: 0;
    border-left: 4px solid rgba(255, 255, 255, 0.4);
    border-top: 2px solid transparent;
    border-bottom: 2px solid transparent;
  }

  /* Satellite */
  .satellite {
    position: absolute;
    top: 45%;
    left: 50%;
    transform: translate(-50%, -50%);
    z-index: 5;
  }

  .satellite-body {
    width: 40px;
    height: 20px;
    background: linear-gradient(135deg, rgba(233, 69, 96, 0.8), rgba(233, 69, 96, 0.6));
    border-radius: 4px;
    position: relative;
    border: 1px solid rgba(233, 69, 96, 0.4);
  }

  .satellite-panels {
    position: absolute;
    width: 25px;
    height: 10px;
    background-color: rgba(233, 69, 96, 0.3);
    border: 1px solid rgba(233, 69, 96, 0.5);
    top: 5px;
  }

  .satellite-panels.left {
    left: -30px;
  }

  .satellite-panels.right {
    right: -30px;
  }

  .satellite-antenna {
    position: absolute;
    bottom: -6px;
    left: 50%;
    transform: translateX(-50%);
    width: 2px;
    height: 6px;
    background-color: rgba(233, 69, 96, 0.8);
  }

  /* Communication beams - centered and shifted right */
  .beam-container {
    position: absolute;
    top: 50%;
    left: 55%; /* Shifted right from 50% */
    transform: translate(-50%, -50%);
    width: 140px;
    height: 200px;
    pointer-events: none;
    z-index: 1;
  }

  .beam {
    position: absolute;
    top: 0;
    left: 50%;
    transform: translateX(-50%);
    width: 100px;
    height: 160px;
    background: radial-gradient(ellipse at top, rgba(233, 69, 96, 0.2), transparent 70%);
    clip-path: polygon(45% 0%, 55% 0%, 70% 100%, 30% 100%);
    animation: beamPulse 4s ease-in-out infinite;
  }

  .beam.uplink {
    background: radial-gradient(ellipse at top, rgba(233, 69, 96, 0.25), transparent 70%);
    animation-delay: 0s;
  }

  .beam.downlink {
    background: radial-gradient(ellipse at top, rgba(233, 69, 96, 0.15), transparent 70%);
    animation-delay: 2s;
  }

  @keyframes beamPulse {
    0%, 100% {
      opacity: 0.6;
      transform: translateX(-50%) scale(1);
    }
    50% {
      opacity: 1;
      transform: translateX(-50%) scale(1.05);
    }
  }

  /* Ground stations */
  .ground-station {
    position: absolute;
    bottom: 15%;
    display: flex;
    flex-direction: column;
    align-items: center;
    z-index: 5;
  }

  .ground-station.left {
    left: 25%;
  }

  .ground-station.right {
    right: 25%;
  }

  .station-icon {
    width: 20px;
    height: 15px;
    background: linear-gradient(135deg, rgba(233, 69, 96, 0.8), rgba(233, 69, 96, 0.6));
    border-radius: 3px;
    position: relative;
    border: 1px solid rgba(233, 69, 96, 0.4);
  }

  .station-antenna {
    position: absolute;
    top: -8px;
    left: 50%;
    transform: translateX(-50%);
    width: 1px;
    height: 8px;
    background-color: rgba(233, 69, 96, 0.8);
  }

  .station-antenna::after {
    content: '';
    position: absolute;
    top: -3px;
    left: 50%;
    transform: translateX(-50%);
    width: 6px;
    height: 3px;
    border-top: 1px solid rgba(233, 69, 96, 0.8);
    border-left: 1px solid rgba(233, 69, 96, 0.8);
    border-right: 1px solid rgba(233, 69, 96, 0.8);
    border-radius: 3px 3px 0 0;
  }

  .station-label {
    margin-top: 8px;
    font-size: 11px;
    color: rgba(255, 255, 255, 0.7);
    text-align: center;
    white-space: nowrap;
  }
</style>