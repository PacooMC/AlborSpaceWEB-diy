---
interface Props {
  className?: string;
}

const { className = '' } = Astro.props;
---

<div class={`relative flex items-center justify-center p-4 lg:p-0 overflow-hidden bg-dark-800/30 diagram-container ${className}`}>
  <div class="w-full max-w-xl mx-auto">
    <div class="payload-diagram">
      <!-- Satellite representation -->
      <div class="satellite">
        <div class="satellite-body"></div>
        <div class="satellite-panels left"></div>
        <div class="satellite-panels right"></div>
        <div class="satellite-antenna"></div>
      </div>

      <!-- Communication beams -->
      <div class="beam-container">
        <div class="beam uplink"></div>
        <div class="beam downlink"></div>
      </div>

      <!-- Ground stations - positioned symmetrically -->
      <div class="ground-station left">
        <div class="station-icon"></div>
        <div class="station-label">Ground Station</div>
      </div>

      <div class="ground-station right">
        <div class="station-icon"></div>
        <div class="station-label">User Terminal</div>
      </div>

      <!-- SDR Processing Components - centered below satellite -->
      <div class="sdr-processing">
        <div class="processing-chain">
          <div class="sdr-component rf-component">
            <div class="component-label">RF</div>
            <div class="component-sublabel">Radio Unit</div>
            <div class="component-detail">1-6 GHz</div>
          </div>
          
          <div class="signal-flow-arrow"></div>
          
          <div class="sdr-component bb-component">
            <div class="component-label">BB</div>
            <div class="component-sublabel">Baseband Processing</div>
            <div class="component-detail">5G NR DSP</div>
          </div>
          
          <div class="signal-flow-arrow"></div>
          
          <div class="sdr-component pt-component">
            <div class="component-label">PT</div>
            <div class="component-sublabel">Protocol Stack</div>
            <div class="component-detail">Software Defined</div>
          </div>
        </div>
      </div>

      <!-- Technical specifications overlay -->
      <div class="tech-overlay">
        <div class="spec-item">
          <div class="spec-label">Power</div>
          <div class="spec-value">< 10W</div>
        </div>
        <div class="spec-item">
          <div class="spec-label">Weight</div>
          <div class="spec-value">< 1.33kg</div>
        </div>
        <div class="spec-item">
          <div class="spec-label">Bandwidth</div>
          <div class="spec-value">200 MHz</div>
        </div>
      </div>
    </div>
  </div>
</div>

<style>
  .diagram-container {
    min-height: 500px;
    border-radius: 0 0.75rem 0.75rem 0;
    overflow: hidden;
    position: relative;
  }

  @media (max-width: 1024px) {
    .diagram-container {
      border-radius: 0 0 0.75rem 0.75rem;
    }
  }

  .payload-diagram {
    position: relative;
    width: 100%;
    height: 100%;
    padding: 20px;
  }

  .satellite {
    position: absolute;
    top: 15%;
    left: 50%;
    transform: translateX(-50%);
  }

  .satellite-body {
    width: 80px;
    height: 40px;
    background: linear-gradient(135deg, rgba(233, 69, 96, 0.8), rgba(233, 69, 96, 0.6));
    border-radius: 8px;
    position: relative;
    border: 2px solid rgba(233, 69, 96, 0.6);
    box-shadow: 0 0 20px rgba(233, 69, 96, 0.4);
  }

  .satellite-panels {
    position: absolute;
    width: 60px;
    height: 20px;
    background-color: rgba(233, 69, 96, 0.4);
    border: 1px solid rgba(233, 69, 96, 0.6);
  }

  .satellite-panels.left {
    left: -70px;
    top: 10px;
  }

  .satellite-panels.right {
    right: -70px;
    top: 10px;
  }

  .satellite-antenna {
    position: absolute;
    bottom: -20px;
    left: 50%;
    transform: translateX(-50%);
    width: 4px;
    height: 20px;
    background-color: rgba(233, 69, 96, 0.8);
  }

  .beam-container {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
  }

  .beam {
    position: absolute;
    background: radial-gradient(ellipse at top, rgba(233, 69, 96, 0.2), transparent 70%);
    width: 200px;
    height: 300px;
  }

  .beam.uplink {
    top: 25%;
    left: 15%;
    transform: rotate(-20deg);
  }

  .beam.downlink {
    top: 25%;
    right: 15%;
    transform: rotate(20deg);
  }

  .ground-station {
    position: absolute;
    bottom: 18%;
    display: flex;
    flex-direction: column;
    align-items: center;
    z-index: 10;
  }

  .ground-station.left {
    left: 15%;
  }

  .ground-station.right {
    right: 15%;
  }

  .station-icon {
    width: 30px;
    height: 30px;
    background-color: rgba(233, 69, 96, 0.8);
    border-radius: 4px;
    position: relative;
    border: 1px solid rgba(233, 69, 96, 0.6);
  }

  .station-icon::before {
    content: '';
    position: absolute;
    top: -15px;
    left: 50%;
    transform: translateX(-50%);
    width: 2px;
    height: 15px;
    background-color: rgba(233, 69, 96, 0.8);
  }

  .station-icon::after {
    content: '';
    position: absolute;
    top: -15px;
    left: 50%;
    transform: translateX(-50%) rotate(45deg);
    width: 15px;
    height: 15px;
    border-top: 2px solid rgba(233, 69, 96, 0.8);
    border-right: 2px solid rgba(233, 69, 96, 0.8);
  }

  .station-label {
    margin-top: 10px;
    font-size: 12px;
    color: rgba(255, 255, 255, 0.7);
    text-align: center;
  }

  /* SDR Processing Components - centered and clearly separated */
  .sdr-processing {
    position: absolute;
    bottom: 8%;
    left: 50%;
    transform: translateX(-50%);
    z-index: 5;
  }

  .processing-chain {
    display: flex;
    align-items: center;
    gap: 15px;
    background-color: rgba(26, 26, 46, 0.8);
    padding: 15px 20px;
    border-radius: 12px;
    border: 1px solid rgba(233, 69, 96, 0.3);
    backdrop-filter: blur(10px);
  }

  .sdr-component {
    display: flex;
    flex-direction: column;
    align-items: center;
    padding: 8px 12px;
    border-radius: 8px;
    min-width: 70px;
    transition: all 0.3s ease;
  }

  .rf-component {
    background-color: rgba(233, 69, 96, 0.2);
    border: 1px solid rgba(233, 69, 96, 0.4);
  }

  .bb-component {
    background-color: rgba(34, 197, 94, 0.2);
    border: 1px solid rgba(34, 197, 94, 0.4);
  }

  .pt-component {
    background-color: rgba(59, 130, 246, 0.2);
    border: 1px solid rgba(59, 130, 246, 0.4);
  }

  .sdr-component:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
  }

  .component-label {
    font-size: 14px;
    font-weight: 600;
    color: rgba(255, 255, 255, 0.9);
    margin-bottom: 2px;
  }

  .component-sublabel {
    font-size: 10px;
    color: rgba(255, 255, 255, 0.7);
    text-align: center;
    line-height: 1.2;
    margin-bottom: 2px;
  }

  .component-detail {
    font-size: 8px;
    color: rgba(255, 255, 255, 0.5);
    text-align: center;
  }

  .signal-flow-arrow {
    width: 20px;
    height: 2px;
    background: linear-gradient(90deg, rgba(233, 69, 96, 0.6), rgba(34, 197, 94, 0.6));
    position: relative;
  }

  .signal-flow-arrow::after {
    content: '';
    position: absolute;
    right: -4px;
    top: 50%;
    transform: translateY(-50%);
    width: 0;
    height: 0;
    border-left: 6px solid rgba(34, 197, 94, 0.6);
    border-top: 3px solid transparent;
    border-bottom: 3px solid transparent;
  }

  .tech-overlay {
    position: absolute;
    top: 20px;
    right: 20px;
    display: flex;
    flex-direction: column;
    gap: 8px;
  }

  .spec-item {
    background-color: rgba(26, 26, 46, 0.8);
    border: 1px solid rgba(233, 69, 96, 0.3);
    border-radius: 6px;
    padding: 6px 10px;
    backdrop-filter: blur(5px);
  }

  .spec-label {
    font-size: 10px;
    color: rgba(255, 255, 255, 0.6);
  }

  .spec-value {
    font-size: 12px;
    color: rgba(233, 69, 96, 0.8);
    font-weight: 500;
  }
</style>