---
interface Props {
  className?: string;
}

const { className = '' } = Astro.props;
---

<div class={`relative flex items-center justify-center p-4 lg:p-0 overflow-hidden bg-dark-800/30 diagram-container ${className}`}>
  <div class="w-full max-w-xl mx-auto">
    <div class="payload-diagram">
      <!-- Processing Flow (Top) -->
      <div class="processing-flow">
        <div class="flow-unit rf-unit">
          <div class="unit-code">RF</div>
          <div class="unit-name">Radio Unit</div>
          <div class="unit-spec">1-6 GHz</div>
        </div>
        
        <div class="flow-arrow"></div>
        
        <div class="flow-unit bbp-unit">
          <div class="unit-code">BBP</div>
          <div class="unit-name">Baseband Processing</div>
          <div class="unit-spec">5G NR DSP</div>
        </div>
        
        <div class="flow-arrow"></div>
        
        <div class="flow-unit pt-unit">
          <div class="unit-code">PT</div>
          <div class="unit-name">Protocol Stack</div>
          <div class="unit-spec">Software Defined</div>
        </div>
      </div>

      <!-- Satellite (Center) -->
      <div class="satellite-container">
        <div class="satellite">
          <div class="sat-body"></div>
          <div class="sat-panels left"></div>
          <div class="sat-panels right"></div>
        </div>

        <!-- Coverage beams -->
        <div class="coverage-beam beam-left"></div>
        <div class="coverage-beam beam-right"></div>
      </div>

      <!-- Ground Stations (Bottom) -->
      <div class="ground-stations">
        <div class="station ground-station">
          <div class="station-antenna"></div>
          <div class="station-label">Ground Station</div>
        </div>
        
        <div class="station user-terminal">
          <div class="station-antenna"></div>
          <div class="station-label">User Terminal</div>
        </div>
      </div>

      <!-- Technical Specifications -->
      <div class="tech-overlay">
        <div class="spec-item">
          <div class="spec-label">Power</div>
          <div class="spec-value">< 10W</div>
        </div>
        <div class="spec-item">
          <div class="spec-label">Weight</div>
          <div class="spec-value">< 1.33kg</div>
        </div>
        <div class="spec-item">
          <div class="spec-label">Bandwidth</div>
          <div class="spec-value">200 MHz</div>
        </div>
      </div>
    </div>
  </div>
</div>

<style>
  .diagram-container {
    min-height: 500px;
    border-radius: 0 0.75rem 0.75rem 0;
    overflow: hidden;
    position: relative;
  }

  @media (max-width: 1024px) {
    .diagram-container {
      border-radius: 0 0 0.75rem 0.75rem;
    }
  }

  .payload-diagram {
    position: relative;
    width: 100%;
    height: 500px;
    padding: 20px;
  }

  /* Processing Flow (Top) */
  .processing-flow {
    position: absolute;
    top: 8%;
    left: 50%;
    transform: translateX(-50%);
    display: flex;
    align-items: center;
    gap: 15px;
    z-index: 10;
  }

  .flow-unit {
    width: 100px;
    height: 70px;
    border-radius: 8px;
    padding: 8px;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    text-align: center;
    transition: all 0.3s ease;
    backdrop-filter: blur(10px);
  }

  .rf-unit {
    background: rgba(233, 69, 96, 0.15);
    border: 2px solid rgba(233, 69, 96, 0.4);
  }

  .bbp-unit {
    background: rgba(34, 197, 94, 0.15);
    border: 2px solid rgba(34, 197, 94, 0.4);
  }

  .pt-unit {
    background: rgba(59, 130, 246, 0.15);
    border: 2px solid rgba(59, 130, 246, 0.4);
  }

  .flow-unit:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.3);
  }

  .rf-unit:hover {
    border-color: rgba(233, 69, 96, 0.7);
    box-shadow: 0 4px 15px rgba(233, 69, 96, 0.2);
  }

  .bbp-unit:hover {
    border-color: rgba(34, 197, 94, 0.7);
    box-shadow: 0 4px 15px rgba(34, 197, 94, 0.2);
  }

  .pt-unit:hover {
    border-color: rgba(59, 130, 246, 0.7);
    box-shadow: 0 4px 15px rgba(59, 130, 246, 0.2);
  }

  .unit-code {
    font-size: 16px;
    font-weight: 600;
    color: rgba(255, 255, 255, 0.9);
    margin-bottom: 2px;
  }

  .unit-name {
    font-size: 10px;
    color: rgba(255, 255, 255, 0.7);
    line-height: 1.1;
    margin-bottom: 2px;
  }

  .unit-spec {
    font-size: 9px;
    color: rgba(255, 255, 255, 0.5);
    line-height: 1;
  }

  .flow-arrow {
    width: 12px;
    height: 2px;
    background: linear-gradient(90deg, rgba(233, 69, 96, 0.6), rgba(34, 197, 94, 0.6));
    position: relative;
  }

  .flow-arrow::after {
    content: '';
    position: absolute;
    right: -4px;
    top: 50%;
    transform: translateY(-50%);
    width: 0;
    height: 0;
    border-left: 6px solid rgba(34, 197, 94, 0.6);
    border-top: 3px solid transparent;
    border-bottom: 3px solid transparent;
  }

  /* Satellite (Center) - Minimalist */
  .satellite-container {
    position: absolute;
    top: 45%;
    left: 50%;
    transform: translate(-50%, -50%);
    z-index: 5;
  }

  .satellite {
    position: relative;
  }

  .sat-body {
    width: 40px;
    height: 20px;
    background: linear-gradient(135deg, rgba(233, 69, 96, 0.8), rgba(233, 69, 96, 0.6));
    border-radius: 4px;
    border: 1px solid rgba(233, 69, 96, 0.7);
    box-shadow: 0 0 12px rgba(233, 69, 96, 0.3);
    position: relative;
  }

  .sat-panels {
    position: absolute;
    width: 25px;
    height: 8px;
    background: rgba(233, 69, 96, 0.4);
    border: 1px solid rgba(233, 69, 96, 0.6);
    top: 6px;
  }

  .sat-panels.left {
    left: -30px;
  }

  .sat-panels.right {
    right: -30px;
  }

  /* Coverage Beams - Beautiful illumination */
  .coverage-beam {
    position: absolute;
    top: 100%;
    width: 180px;
    height: 200px;
    background: radial-gradient(ellipse at top, rgba(233, 69, 96, 0.15) 0%, rgba(233, 69, 96, 0.08) 40%, transparent 70%);
    clip-path: polygon(40% 0%, 60% 0%, 80% 100%, 20% 100%);
    z-index: 1;
  }

  .beam-left {
    left: -120px;
    transform: rotate(-15deg);
    animation: beamPulse 4s ease-in-out infinite;
  }

  .beam-right {
    left: -60px;
    transform: rotate(15deg);
    animation: beamPulse 4s ease-in-out infinite 2s;
  }

  @keyframes beamPulse {
    0%, 100% {
      opacity: 0.6;
    }
    50% {
      opacity: 1;
    }
  }

  /* Ground Stations (Bottom) - Minimalist */
  .ground-stations {
    position: absolute;
    bottom: 15%;
    left: 50%;
    transform: translateX(-50%);
    display: flex;
    justify-content: space-between;
    width: 300px;
    z-index: 10;
  }

  .station {
    display: flex;
    flex-direction: column;
    align-items: center;
  }

  .station-antenna {
    width: 20px;
    height: 20px;
    background: rgba(233, 69, 96, 0.6);
    border-radius: 2px;
    border: 1px solid rgba(233, 69, 96, 0.8);
    position: relative;
    margin-bottom: 8px;
  }

  .station-antenna::before {
    content: '';
    position: absolute;
    top: -8px;
    left: 50%;
    transform: translateX(-50%);
    width: 2px;
    height: 8px;
    background: rgba(233, 69, 96, 0.8);
  }

  .station-antenna::after {
    content: '';
    position: absolute;
    top: -12px;
    left: 50%;
    transform: translateX(-50%);
    width: 12px;
    height: 4px;
    border: 1px solid rgba(233, 69, 96, 0.8);
    border-bottom: none;
    border-radius: 6px 6px 0 0;
  }

  .station-label {
    font-size: 11px;
    color: rgba(255, 255, 255, 0.7);
    text-align: center;
  }

  /* Technical Specifications */
  .tech-overlay {
    position: absolute;
    top: 25%;
    right: 8%;
    display: flex;
    flex-direction: column;
    gap: 8px;
    z-index: 10;
  }

  .spec-item {
    background: rgba(26, 26, 46, 0.8);
    border: 1px solid rgba(233, 69, 96, 0.3);
    border-radius: 6px;
    padding: 6px 10px;
    backdrop-filter: blur(10px);
  }

  .spec-label {
    font-size: 9px;
    color: rgba(255, 255, 255, 0.6);
    line-height: 1;
  }

  .spec-value {
    font-size: 11px;
    color: rgba(233, 69, 96, 0.9);
    font-weight: 500;
  }
</style>