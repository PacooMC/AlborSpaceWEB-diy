---
    import { ArrowRight } from 'lucide-astro';
    import { team } from '../../content/home';
    import { teamMembers } from '../../content/team';

    // Find the full data for the preview members
    const previewMembersData = team.members.map(previewMember => {
      return teamMembers.find(fullMember => fullMember.name === previewMember.name) || previewMember;
    });
    ---

    <section class="section pb-24 relative scroll-reveal">
      <!-- Smooth gradient transition from research section -->
      <div class="absolute inset-x-0 top-0 h-32 bg-gradient-to-b from-[#000012]/90 to-transparent z-0"></div>

      <div class="container-custom relative z-10">
        <div class="text-center mb-16">
          <h2 class="heading-lg mb-4 slide-right">{team.title}</h2>
          <div class="h-px w-20 bg-gradient-to-r from-[#FF6B00]/30 to-[#FF6B00]/20 mx-auto"></div>
        </div>

        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-10 mt-16">
          {previewMembersData.map((member, index) => (
            <div
              class="reveal-element team-member-card group cursor-pointer"
              data-reveal-delay={index * 150}
              data-member={JSON.stringify(member)}
            >
              <div class="relative overflow-hidden rounded-xl mb-4 aspect-square">
                <img src={member.image} alt={member.name} class="w-full h-full object-cover transition-transform duration-500 group-hover:scale-110" />
                <div class="absolute inset-0 bg-gradient-to-t from-[#000012] via-[#000012]/50 to-transparent opacity-90 group-hover:opacity-70 transition-opacity duration-300"></div>
                <div class="absolute bottom-0 left-0 p-6 transform transition-transform duration-300 group-hover:-translate-y-1">
                  <h3 class="text-xl font-light mb-2 text-gradient group-hover:text-[#FF6B00]/70 transition-colors duration-300">{member.name}</h3>
                  <p class="text-[#FF6B00]/60 text-sm tracking-wider uppercase">{member.role}</p>
                </div>
                <div class="absolute inset-0 bg-[#FF6B00]/5 opacity-0 transition-opacity duration-300 group-hover:opacity-100"></div>
              </div>
            </div>
          ))}
        </div>

        {/* View Full Team button with minimalist design */}
        <div class="text-center mt-16 reveal-element" data-reveal-delay="600">
          <a href="/team" class="primary-button-minimalist group">
            <span>View Full Team</span>
            <ArrowRight class="w-5 h-5 ml-2 transition-transform duration-300 group-hover:translate-x-1 group-hover:text-[#FF6B00]/80" />
          </a>
        </div>
      </div>

      <!-- Smooth transition to footer -->
      <div class="absolute inset-x-0 bottom-0 h-32 bg-gradient-to-t from-[#000012]/90 to-transparent z-0"></div>
    </section>

    <style>
      /* Team member card animations with minimalist design */
      .team-member-card {
        position: relative;
        transition: transform 0.3s ease, box-shadow 0.3s ease;
        background: rgba(0, 0, 18, 0.3);
        backdrop-filter: blur(10px);
        border: 1px solid rgba(255, 107, 0, 0.08);
        border-radius: 0.75rem;
        overflow: hidden;
      }

      .team-member-card:hover {
        transform: translateY(-5px) scale(1.02);
        box-shadow:
          0 20px 40px rgba(0, 0, 18, 0.6),
          0 0 30px rgba(255, 107, 0, 0.15);
        border-color: rgba(255, 107, 0, 0.2);
      }

      .team-member-card img {
        transition: transform 0.5s ease;
      }

      .team-member-card:hover img {
        transform: scale(1.1);
      }

      .text-gradient {
        background: linear-gradient(to right, #fff, rgba(255, 255, 255, 0.8));
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
      }

      /* Slide animation for title */
      .slide-right {
        opacity: 0;
        transform: translateX(50px);
      }
    </style>

    <script>
      // This script assumes the modal and its functions (openModal) are globally available (moved to Layout.astro)
      document.addEventListener('DOMContentLoaded', () => {
        document.querySelectorAll('.team-member-card').forEach(card => {
          card.addEventListener('click', () => {
            const memberData = card.getAttribute('data-member');
            if (memberData) {
              try {
                const member = JSON.parse(memberData);
                // Check if the global openModal function exists before calling
                if (typeof window.openModal === 'function') {
                  window.openModal(member);
                } else {
                  console.error('openModal function not found. Ensure modal logic is in Layout.astro.');
                }
              } catch (e) {
                console.error('Failed to parse member data:', e);
              }
            }
          });
        });
      });
    </script>