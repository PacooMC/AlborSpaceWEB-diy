---
interface Props {
  className?: string;
}

const { className = '' } = Astro.props;
---

<div class={`relative flex items-center justify-center p-4 lg:p-0 overflow-hidden bg-dark-800/30 diagram-container ${className}`}>
  <div class="w-full max-w-xl mx-auto">
    <div class="payload-diagram">
      <!-- Satellite representation -->
      <div class="satellite">
        <div class="satellite-body"></div>
        <div class="satellite-panels left"></div>
        <div class="satellite-panels right"></div>
        <div class="satellite-antenna"></div>
      </div>

      <!-- Communication beams -->
      <div class="beam-container">
        <div class="beam uplink"></div>
        <div class="beam downlink"></div>
      </div>

      <!-- Ground stations -->
      <div class="ground-station left">
        <div class="station-icon"></div>
        <div class="station-label">Ground Station</div>
      </div>

      <div class="ground-station right">
        <div class="station-icon"></div>
        <div class="station-label">User Terminal</div>
      </div>

      <!-- Technical overlay -->
      <div class="tech-overlay">
        <div class="spec-item">
          <div class="spec-label">Frequency</div>
          <div class="spec-value">Ka-Band</div>
        </div>
        <div class="spec-item">
          <div class="spec-label">Bandwidth</div>
          <div class="spec-value">100 MHz</div>
        </div>
      </div>
    </div>
  </div>
</div>

<style>
  .diagram-container {
    min-height: 500px;
    border-radius: 0 0.75rem 0.75rem 0;
    overflow: hidden;
    position: relative;
  }

  @media (max-width: 1024px) {
    .diagram-container {
      border-radius: 0 0 0.75rem 0.75rem;
    }
  }

  .payload-diagram {
    position: relative;
    width: 100%;
    height: 100%;
    padding: 20px;
  }

  .satellite {
    position: absolute;
    top: 20%;
    left: 50%;
    transform: translateX(-50%);
  }

  .satellite-body {
    width: 80px;
    height: 40px;
    background: linear-gradient(135deg, rgba(83, 52, 131, 0.8), rgba(233, 69, 96, 0.8));
    border-radius: 8px;
    position: relative;
  }

  .satellite-panels {
    position: absolute;
    width: 60px;
    height: 20px;
    background-color: rgba(233, 69, 96, 0.4);
    border: 1px solid rgba(233, 69, 96, 0.6);
  }

  .satellite-panels.left {
    left: -70px;
    top: 10px;
  }

  .satellite-panels.right {
    right: -70px;
    top: 10px;
  }

  .satellite-antenna {
    position: absolute;
    bottom: -20px;
    left: 50%;
    transform: translateX(-50%);
    width: 4px;
    height: 20px;
    background-color: rgba(233, 69, 96, 0.8);
  }

  .beam-container {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
  }

  .beam {
    position: absolute;
    background: radial-gradient(ellipse at top, rgba(233, 69, 96, 0.2), transparent 70%);
    width: 200px;
    height: 300px;
  }

  .beam.uplink {
    top: 30%;
    left: 20%;
    transform: rotate(-30deg);
  }

  .beam.downlink {
    top: 30%;
    right: 20%;
    transform: rotate(30deg);
  }

  .ground-station {
    position: absolute;
    bottom: 20%;
    display: flex;
    flex-direction: column;
    align-items: center;
  }

  .ground-station.left {
    left: 20%;
  }

  .ground-station.right {
    right: 20%;
  }

  .station-icon {
    width: 30px;
    height: 30px;
    background-color: rgba(233, 69, 96, 0.8);
    border-radius: 4px;
    position: relative;
  }

  .station-icon::before {
    content: '';
    position: absolute;
    top: -15px;
    left: 50%;
    transform: translateX(-50%);
    width: 2px;
    height: 15px;
    background-color: rgba(233, 69, 96, 0.8);
  }

  .station-icon::after {
    content: '';
    position: absolute;
    top: -15px;
    left: 50%;
    transform: translateX(-50%) rotate(45deg);
    width: 15px;
    height: 15px;
    border-top: 2px solid rgba(233, 69, 96, 0.8);
    border-right: 2px solid rgba(233, 69, 96, 0.8);
  }

  .station-label {
    margin-top: 10px;
    font-size: 12px;
    color: rgba(255, 255, 255, 0.7);
  }

  .tech-overlay {
    position: absolute;
    top: 20px;
    left: 20px;
    display: flex;
    flex-direction: column;
    gap: 10px;
  }

  .spec-item {
    background-color: rgba(26, 26, 46, 0.7);
    border: 1px solid rgba(233, 69, 96, 0.3);
    border-radius: 4px;
    padding: 6px 10px;
  }

  .spec-label {
    font-size: 10px;
    color: rgba(255, 255, 255, 0.6);
  }

  .spec-value {
    font-size: 12px;
    color: rgba(233, 69, 96, 0.8);
  }
</style>
