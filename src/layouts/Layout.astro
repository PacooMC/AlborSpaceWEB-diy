---
    import Navigation from '../components/Navigation.astro';
    import Footer from '../components/Footer.astro';
    import '../styles/global.css';
    // Import icons needed for the modal
    import { Mail, MapPin } from 'lucide-astro';
    // Import the new image
    import horizonImage from '../assets/Planet-horizon.jpeg';

    interface Props {
      title?: string;
      description?: string;
    }

    const {
      title = "ALBOR SPACE - Advanced Satellite Communication Systems",
      description = "Next generation satellite communication systems for space exploration."
    } = Astro.props;
    ---

    <!doctype html>
    <html lang="en" class="dark">
      <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
        <meta name="generator" content={Astro.generator} />
        <meta name="description" content={description} />
        <link rel="preconnect" href="https://fonts.googleapis.com">
        <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
        <link href="https://fonts.googleapis.com/css2?family=Inter:wght@100;200;300;400;500;600;700&display=swap" rel="stylesheet">
        <title>{title}</title>
      </head>
      <body class="text-white min-h-screen overflow-x-hidden">
        <!-- Ultra dark navy background -->
        <div class="fixed inset-0 z-[-10] ultra-dark-navy-bg"></div>

        <!-- Very subtle gradient overlay -->
        <div class="fixed inset-0 z-[-9] ultra-dark-overlay"></div>

        <!-- Enhanced planet horizon background - Responsive -->
        <div class="fixed inset-0 z-[-8] overflow-hidden">
          <div id="horizon-container" class="absolute inset-0 w-full h-full">
            <img 
              src={horizonImage.src} 
              alt="Planet horizon" 
              class="w-full h-full object-cover object-bottom opacity-20 sm:opacity-25" 
              id="horizon-image"
            />
            <div class="absolute inset-0 bg-gradient-to-t from-[#000012]/95 via-[#000018]/70 to-transparent"></div>
          </div>
        </div>

        <!-- Enhanced star field background -->
        <div id="star-field" class="fixed inset-0 z-[-5]"></div>

        <Navigation />

        <main class="relative z-10">
          <slot />
        </main>

        <Footer />

        <!-- Enhanced responsive modal -->
        <div id="member-modal" class="fixed inset-0 z-50 flex items-center justify-center p-4 hidden">
          <div class="absolute inset-0 bg-[#000012]/98 backdrop-blur-2xl opacity-0 transition-opacity duration-500"></div>
          <div class="relative bg-[#000018]/95 rounded-2xl border border-white/8 p-4 sm:p-6 lg:p-8 w-full max-w-sm sm:max-w-md md:max-w-lg lg:max-w-4xl transform scale-95 opacity-0 transition-all duration-500 backdrop-blur-xl shadow-2xl max-h-[90vh] overflow-y-auto">
            <button id="close-modal" class="absolute top-3 right-3 sm:top-4 sm:right-4 text-white/50 hover:text-white/80 transition-colors duration-300 p-1">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 sm:h-6 sm:w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
              </svg>
            </button>

            <div class="flex flex-col lg:flex-row gap-6 lg:gap-8">
              <!-- Image and contact info - Responsive -->
              <div class="w-full lg:w-1/3">
                <div class="rounded-xl overflow-hidden mb-4 sm:mb-6 ring-1 ring-white/8 shadow-xl">
                  <img id="modal-image" src="" alt="" class="w-full aspect-square object-cover">
                </div>

                <!-- Contact info - Responsive -->
                <div class="space-y-3 sm:space-y-4 p-3 sm:p-4 bg-[#000012]/70 rounded-xl border border-white/5">
                  <h4 class="text-xs sm:text-sm uppercase tracking-wider text-white/50 mb-3">Contact Information</h4>

                  <a id="modal-email" href="" class="flex items-center text-white/50 hover:text-white/80 group transition-colors duration-300">
                    <Mail size={18} class="mr-2 sm:mr-3 text-[#FF6B00]/40 group-hover:text-[#FF6B00]/60 transition-colors duration-300 flex-shrink-0" />
                    <span class="text-xs sm:text-sm group-hover:text-[#FF6B00]/70 transition-colors duration-300 truncate"></span>
                  </a>

                  <div class="flex items-start text-white/50 text-xs sm:text-sm">
                    <MapPin size={18} class="mr-2 sm:mr-3 shrink-0 text-[#FF6B00]/40 mt-0.5" />
                    <div class="leading-relaxed">
                      <p>Departamento de Ingeniería de Comunicaciones</p>
                      <p>ETSI Telecomunicación</p>
                      <p>Universidad de Málaga</p>
                      <p>Campus de Teatinos, 29071 Málaga, Spain</p>
                    </div>
                  </div>
                </div>
              </div>

              <!-- Content - Responsive -->
              <div class="w-full lg:w-2/3">
                <h3 id="modal-name" class="text-xl sm:text-2xl font-light mb-2 text-gradient-minimalist"></h3>
                <p id="modal-role" class="text-[#FF6B00]/60 text-xs sm:text-sm tracking-wider uppercase mb-4 sm:mb-6"></p>

                <div class="prose prose-invert prose-sm max-w-none text-sm sm:text-base">
                  <p id="modal-bio" class="text-white/70 leading-relaxed mb-6 sm:mb-8"></p>

                  <!-- Education - Responsive -->
                  <div class="mb-6 sm:mb-8">
                    <h4 class="text-base sm:text-lg font-light mb-3 sm:mb-4 text-white">Education</h4>
                    <ul id="modal-education" class="space-y-2 text-white/60 text-sm sm:text-base"></ul>
                  </div>

                  <!-- Expertise - Responsive -->
                  <div class="mb-6 sm:mb-8">
                    <h4 class="text-base sm:text-lg font-light mb-3 sm:mb-4 text-white">Areas of Expertise</h4>
                    <div id="modal-expertise" class="flex flex-wrap gap-2"></div>
                  </div>

                  <!-- Stats - Responsive grid -->
                  <div class="grid grid-cols-2 gap-3 sm:gap-4 text-center">
                    <div class="bg-[#FF6B00]/5 rounded-lg p-3 sm:p-4 border border-[#FF6B00]/8 hover:border-[#FF6B00]/15 transition-colors duration-300">
                      <div id="modal-publications" class="text-xl sm:text-2xl font-light text-[#FF6B00]/70 mb-1 sm:mb-2"></div>
                      <div class="text-xs sm:text-sm text-white/50">Publications</div>
                    </div>
                    <div class="bg-[#FF6B00]/5 rounded-lg p-3 sm:p-4 border border-[#FF6B00]/8 hover:border-[#FF6B00]/15 transition-colors duration-300">
                      <div id="modal-patents" class="text-xl sm:text-2xl font-light text-[#FF6B00]/70 mb-1 sm:mb-2"></div>
                      <div class="text-xs sm:text-sm text-white/50">Patents</div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>

        <style is:global>
          /* Ultra dark navy background */
          .ultra-dark-navy-bg {
            background: linear-gradient(135deg, 
              #000012 0%, 
              #000018 25%, 
              #000024 50%, 
              #000030 75%, 
              #000012 100%);
          }

          /* Very subtle gradient overlay */
          .ultra-dark-overlay {
            background: radial-gradient(ellipse at center, 
              transparent 0%, 
              rgba(0, 0, 24, 0.1) 50%, 
              rgba(0, 0, 36, 0.2) 100%);
            animation: subtlePulse 12s ease-in-out infinite alternate;
          }

          @keyframes subtlePulse {
            0% { opacity: 0.1; }
            100% { opacity: 0.3; }
          }

          /* Enhanced star animations */
          .star {
            position: absolute;
            border-radius: 50%;
            animation: twinkleOnUltraDark 6s infinite;
          }

          @keyframes twinkleOnUltraDark {
            0%, 100% { 
              opacity: 0.5; 
              transform: scale(1);
            }
            50% { 
              opacity: 1; 
              transform: scale(1.2);
            }
          }

          /* Responsive modal styles */
          .expertise-tag {
            background-color: rgba(255, 107, 0, 0.08);
            color: rgba(255, 255, 255, 0.8);
            padding: 0.25rem 0.75rem;
            border-radius: 9999px;
            font-size: 0.75rem;
            border: 1px solid rgba(255, 107, 0, 0.12);
            transition: all 0.3s ease;
          }

          @media (min-width: 640px) {
            .expertise-tag {
              font-size: 0.875rem;
              padding: 0.375rem 1rem;
            }
          }

          .expertise-tag:hover {
            background-color: rgba(255, 107, 0, 0.12);
            border-color: rgba(255, 107, 0, 0.2);
            transform: translateY(-1px);
            box-shadow: 0 2px 8px rgba(255, 107, 0, 0.1);
          }

          .text-gradient-minimalist {
            background: linear-gradient(to right, #fff, rgba(255, 107, 0, 0.8));
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
          }

          /* Enhanced responsive primary button */
          .primary-button-minimalist {
            position: relative;
            display: inline-flex;
            align-items: center;
            justify-content: center;
            padding: 0.875rem 2rem;
            background: transparent;
            border-radius: 0.5rem;
            font-size: 0.875rem;
            font-weight: 400;
            letter-spacing: 0.1em;
            text-transform: uppercase;
            color: white;
            transition: all 0.5s cubic-bezier(0.4, 0, 0.2, 1);
            backdrop-filter: blur(20px);
            overflow: hidden;
          }

          @media (min-width: 640px) {
            .primary-button-minimalist {
              padding: 1rem 2.5rem;
              font-size: 1rem;
            }
          }

          .primary-button-minimalist::before {
            content: '';
            position: absolute;
            inset: 0;
            background: linear-gradient(135deg, 
              rgba(0, 0, 18, 0.6) 0%, 
              rgba(0, 0, 24, 0.4) 50%, 
              rgba(0, 0, 30, 0.5) 100%);
            border-radius: 0.5rem;
            transition: all 0.5s ease;
            z-index: 1;
          }

          .primary-button-minimalist::after {
            content: '';
            position: absolute;
            inset: 0;
            border-radius: 0.5rem;
            padding: 1px;
            background: linear-gradient(135deg, 
              rgba(255, 107, 0, 0.2) 0%, 
              rgba(255, 255, 255, 0.1) 50%, 
              rgba(255, 107, 0, 0.2) 100%);
            -webkit-mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
            -webkit-mask-composite: xor;
            mask-composite: exclude;
            transition: all 0.5s ease;
            z-index: 0;
          }

          .primary-button-minimalist > * {
            position: relative;
            z-index: 2;
          }

          .primary-button-minimalist:hover {
            transform: translateY(-2px) scale(1.02);
            box-shadow: 
              0 15px 35px rgba(0, 0, 18, 0.6),
              0 5px 15px rgba(255, 107, 0, 0.15);
          }

          .primary-button-minimalist:hover::before {
            background: linear-gradient(135deg, 
              rgba(255, 107, 0, 0.1) 0%, 
              rgba(0, 0, 24, 0.4) 50%, 
              rgba(255, 107, 0, 0.1) 100%);
          }

          .primary-button-minimalist:hover::after {
            background: linear-gradient(135deg, 
              rgba(255, 107, 0, 0.4) 0%, 
              rgba(255, 255, 255, 0.2) 50%, 
              rgba(255, 107, 0, 0.4) 100%);
          }

          /* Responsive scroll behavior */
          @media (max-width: 768px) {
            html {
              scroll-padding-top: 80px;
            }
          }
        </style>

        <script>
          // Global Modal Logic with responsive improvements
          const modal = document.getElementById('member-modal');
          const modalOverlay = modal?.querySelector('div');
          const modalContent = modal?.querySelector('div:nth-child(2)');
          const closeButton = document.getElementById('close-modal');

          const modalImage = document.getElementById('modal-image');
          const modalName = document.getElementById('modal-name');
          const modalRole = document.getElementById('modal-role');
          const modalBio = document.getElementById('modal-bio');
          const modalEmail = document.getElementById('modal-email');
          const modalEducation = document.getElementById('modal-education');
          const modalExpertise = document.getElementById('modal-expertise');
          const modalPublications = document.getElementById('modal-publications');
          const modalPatents = document.getElementById('modal-patents');

          // Enhanced modal with responsive behavior
          window.openModal = function(member) {
            if (modal && modalOverlay && modalContent) {
              modal.classList.remove('hidden');
              document.body.style.overflow = 'hidden';
              setTimeout(() => {
                modalOverlay.classList.add('opacity-100');
                modalContent.classList.remove('scale-95', 'opacity-0');
                modalContent.classList.add('scale-100', 'opacity-100');
              }, 10);

              if (modalImage) {
                modalImage.src = member.image;
                modalImage.alt = member.name;
              }
              if (modalName) modalName.textContent = member.name;
              if (modalRole) modalRole.textContent = member.role;
              if (modalBio) modalBio.textContent = member.bio || 'No bio available.';

              // Email
              if (modalEmail) {
                const emailSpan = modalEmail.querySelector('span');
                if (member.email) {
                  modalEmail.href = `mailto:${member.email}`;
                  if (emailSpan) emailSpan.textContent = member.email;
                  modalEmail.style.display = 'flex';
                } else {
                  modalEmail.style.display = 'none';
                }
              }

              // Education
              if (modalEducation) {
                modalEducation.innerHTML = member.education?.map(edu =>
                  `<li class="flex items-start">
                    <span class="w-1.5 h-1.5 rounded-full bg-[#FF6B00]/40 mt-1.5 mr-3 shrink-0"></span>
                    ${edu}
                  </li>`
                ).join('') || '<li>No education information available.</li>';
              }

              // Expertise
              if (modalExpertise) {
                modalExpertise.innerHTML = member.expertise?.map(exp =>
                  `<span class="expertise-tag">${exp}</span>`
                ).join('') || '<span class="text-white/50 text-sm">No expertise listed.</span>';
              }

              // Stats
              if (modalPublications) modalPublications.textContent = member.publications?.toString() || '0';
              if (modalPatents) modalPatents.textContent = member.patents?.toString() || '0';
            }
          }

          window.closeModal = function() {
            if (modal && modalOverlay && modalContent) {
              modalOverlay.classList.remove('opacity-100');
              modalContent.classList.remove('scale-100', 'opacity-100');
              modalContent.classList.add('scale-95', 'opacity-0');
              document.body.style.overflow = '';

              setTimeout(() => {
                modal.classList.add('hidden');
              }, 300);
            }
          }

          // Enhanced event listeners
          closeButton?.addEventListener('click', window.closeModal);

          modalOverlay?.addEventListener('click', (e) => {
            if (e.target === modalOverlay) {
              window.closeModal();
            }
          });

          document.addEventListener('keydown', (e) => {
            if (e.key === 'Escape' && !modal.classList.contains('hidden')) {
              window.closeModal();
            }
          });

          // Enhanced page initialization with responsive behavior
          document.addEventListener('DOMContentLoaded', () => {
            // Enhanced stars background with responsive density
            const starField = document.getElementById('star-field');
            if (starField) {
              starField.innerHTML = '';

              // Responsive star count
              const isMobile = window.innerWidth < 768;
              const starCount = isMobile ? 100 : 200;

              const fragment = document.createDocumentFragment();
              for (let i = 0; i < starCount; i++) {
                const star = document.createElement('div');
                star.classList.add('star');

                // Responsive star sizing
                const size = Math.random() > 0.92 ? Math.random() * (isMobile ? 2 : 2.5) + 1.5 :
                         Math.random() > 0.8 ? Math.random() * (isMobile ? 1.2 : 1.5) + 0.8 :
                         Math.random() * (isMobile ? 0.6 : 0.8) + 0.4;

                // Enhanced star coloring
                let color;
                const random = Math.random();
                if (random > 0.97) {
                  color = 'rgba(255, 107, 0, 0.6)';
                } else if (random > 0.90) {
                  color = 'rgba(255, 255, 255, 1)';
                } else if (random > 0.75) {
                  color = 'rgba(200, 220, 255, 0.9)';
                } else {
                  color = 'rgba(255, 255, 255, 0.7)';
                }

                star.style.width = `${size}px`;
                star.style.height = `${size}px`;
                star.style.top = `${Math.random() * 100}%`;
                star.style.left = `${Math.random() * 100}%`;
                star.style.backgroundColor = color;

                star.style.animationDelay = `${Math.random() * 10}s`;
                star.style.animationDuration = `${Math.random() * 8 + 5}s`;

                if (size > 1.5) {
                  star.style.boxShadow = `0 0 ${size * 3}px ${color}`;
                }

                fragment.appendChild(star);
              }
              starField.appendChild(fragment);
            }

            // Enhanced responsive scroll effects
            const horizonImage = document.getElementById('horizon-image');

            let ticking = false;
            window.addEventListener('scroll', () => {
              if (!ticking) {
                requestAnimationFrame(() => {
                  const scrollY = window.scrollY;

                  // Responsive parallax effect
                  if (horizonImage) {
                    const parallaxOffset = scrollY * (window.innerWidth < 768 ? 0.1 : 0.2);
                    horizonImage.style.transform = `translateY(${parallaxOffset}px) scale(1.05)`;
                  }

                  ticking = false;
                });
                ticking = true;
              }
            }, { passive: true });

            // Handle responsive resize
            window.addEventListener('resize', () => {
              // Update star field density on significant size changes
              const currentStarCount = starField?.children.length || 0;
              const targetCount = window.innerWidth < 768 ? 100 : 200;
              
              if (Math.abs(currentStarCount - targetCount) > 50) {
                // Recreate stars if significant change
                const event = new Event('DOMContentLoaded');
                document.dispatchEvent(event);
              }
            });
          });
        </script>
      </body>
    </html>