---
    import Layout from '../layouts/Layout.astro';
    import { teamPage, teamMembers } from '../content/team';
    import { Mail, MapPin } from 'lucide-astro';

    ---

    <Layout title={`${teamPage.title} - ALBOR SPACE`} description={teamPage.description}>
      <div class="section-padding relative">
        <!-- Background effects -->
        <div class="absolute inset-0 bg-gradient-to-b from-[#000012]/90 via-[#000018]/50 to-[#000012]/90"></div>

        <div class="container-custom relative z-10">
          <!-- Page header - Responsive -->
          <div class="text-center mb-12 sm:mb-16 reveal-element">
            <h1 class="heading-lg mb-4 slide-right">{teamPage.title}</h1>
            <p class="text-body text-white/60 max-w-2xl mx-auto">{teamPage.description}</p>
          </div>

          <!-- Team grid - Enhanced for mobile touch -->
          <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-6 sm:gap-8 lg:gap-10">
            {teamMembers.map((member, index) => (
              <div
                class="team-card group cursor-pointer transition-all duration-500 touch-manipulation"
                data-member={JSON.stringify(member)}
                data-reveal="fade-up"
                data-reveal-delay={index * 100}
              >
                <div class="rounded-xl overflow-hidden h-full bg-[#000018]/40 border border-white/5 hover:border-[#FF6B00]/15 transition-all duration-300 team-card-inner">
                  <!-- Member photo - Responsive aspect ratio -->
                  <div class="relative aspect-square overflow-hidden">
                    <img
                      src={member.image}
                      alt={member.name}
                      class="w-full h-full object-cover transition-all duration-500 group-hover:scale-110 group-hover:filter group-hover:brightness-110"
                    />
                    <div class="absolute inset-0 bg-gradient-to-t from-[#000012] via-[#000012]/70 to-transparent opacity-60 transition-opacity duration-500 group-hover:opacity-40"></div>
                    
                    <!-- Enhanced mobile tap indicator -->
                    <div class="absolute inset-0 bg-[#FF6B00]/10 opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
                    <div class="absolute top-4 right-4 w-8 h-8 rounded-full bg-[#FF6B00]/20 backdrop-blur-sm flex items-center justify-center opacity-0 group-hover:opacity-100 transition-all duration-300 scale-75 group-hover:scale-100">
                      <svg class="w-4 h-4 text-white/80" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"/>
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"/>
                      </svg>
                    </div>
                  </div>

                  <!-- Member info - Enhanced for mobile -->
                  <div class="p-4 sm:p-6">
                    <h3 class="text-lg sm:text-xl font-light mb-2 text-white group-hover:text-[#FF6B00]/70 transition-colors duration-300">{member.name}</h3>
                    <p class="text-[#FF6B00]/60 text-xs sm:text-sm tracking-wider uppercase mb-3 sm:mb-4">{member.role}</p>

                    <!-- Contact info - Enhanced mobile touch targets -->
                    <div class="space-y-2">
                      <div class="flex items-center text-white/50 text-xs sm:text-sm">
                        <Mail size={14} class="mr-2 text-[#FF6B00]/40 flex-shrink-0" />
                        <span class="truncate">{member.email}</span>
                      </div>

                      <div class="flex items-center text-white/50 text-xs sm:text-sm">
                        <MapPin size={14} class="mr-2 text-[#FF6B00]/40 flex-shrink-0" />
                        <span>Universidad de Málaga</span>
                      </div>
                    </div>

                    <!-- Mobile hint text -->
                    <div class="mt-3 pt-3 border-t border-white/5">
                      <p class="text-xs text-white/40 text-center group-hover:text-[#FF6B00]/50 transition-colors duration-300">
                        Tap to view details
                      </p>
                    </div>
                  </div>
                </div>
              </div>
            ))}
          </div>

          <!-- Team mission statement - Responsive -->
          <div class="mt-16 sm:mt-20 lg:mt-24 max-w-4xl mx-auto">
            <div class="glass-card">
              <h2 class="heading-md mb-4 sm:mb-6 text-center">Our Mission</h2>
              <div class="space-y-4 sm:space-y-6 text-sm sm:text-base">
                <p class="text-white/70 leading-relaxed">
                  At Albor Space, we're dedicated to pushing the boundaries of space communications through innovation,
                  research, and technological excellence. Our team combines decades of academic expertise with
                  practical industry experience to develop revolutionary solutions for the next generation of
                  space exploration and connectivity.
                </p>
                <p class="text-white/70 leading-relaxed">
                  Founded by leading experts from the Universidad de Málaga's telecommunications department,
                  our team brings together specialists in satellite communications, software-defined radio,
                  network optimization, and artificial intelligence to address the most complex challenges in
                  non-terrestrial networks.
                </p>
              </div>
            </div>
          </div>
        </div>
      </div>
    </Layout>

    <style>
      /* Enhanced team card with better mobile interaction */
      .team-card {
        transition: all 0.5s cubic-bezier(0.4, 0, 0.2, 1);
        box-shadow: 0 4px 20px rgba(0, 0, 18, 0.4);
        /* Better mobile touch targets */
        -webkit-tap-highlight-color: transparent;
        touch-action: manipulation;
      }

      .team-card-inner {
        /* Minimum touch target size for mobile */
        min-height: 320px;
      }

      @media (max-width: 640px) {
        .team-card-inner {
          min-height: 280px;
        }
      }

      .team-card:hover {
        transform: translateY(-5px) scale(1.02);
        box-shadow:
          0 20px 40px rgba(0, 0, 18, 0.6),
          0 0 20px rgba(255, 107, 0, 0.15);
      }

      /* Mobile-specific enhancements */
      @media (max-width: 768px) {
        .team-card:active {
          transform: translateY(-2px) scale(1.01);
          box-shadow:
            0 15px 30px rgba(0, 0, 18, 0.8),
            0 0 15px rgba(255, 107, 0, 0.2);
        }
      }

      /* Enhanced touch feedback */
      .team-card:active .team-card-inner {
        background: rgba(0, 0, 24, 0.5);
        border-color: rgba(255, 107, 0, 0.3);
      }

      /* Animation classes */
      .reveal-element {
        opacity: 0;
        transform: translateY(30px);
        transition: all 0.8s cubic-bezier(0.4, 0, 0.2, 1);
      }

      .reveal-element.revealed {
        opacity: 1;
        transform: translateY(0);
      }

      .slide-right {
        opacity: 0;
        transform: translateX(50px);
        animation: slideInFromRight 1.2s forwards;
        animation-delay: 0.2s;
      }

      @keyframes slideInFromRight {
        0% {
          opacity: 0;
          transform: translateX(50px);
        }
        100% {
          opacity: 1;
          transform: translateX(0);
        }
      }

      /* Improve touch scrolling on mobile */
      @media (max-width: 768px) {
        .container-custom {
          -webkit-overflow-scrolling: touch;
        }
      }
    </style>

    <script>
      document.addEventListener('DOMContentLoaded', () => {
        // Enhanced touch handling for team cards
        document.querySelectorAll('.team-card').forEach(card => {
          let touchStartTime = 0;
          let touchStartY = 0;
          
          // Mouse click for desktop
          card.addEventListener('click', (e) => {
            if (!('ontouchstart' in window)) {
              handleCardSelection(card);
            }
          });
          
          // Enhanced touch handling for mobile
          card.addEventListener('touchstart', (e) => {
            touchStartTime = Date.now();
            touchStartY = e.touches[0].clientY;
            card.classList.add('touch-active');
          }, { passive: true });
          
          card.addEventListener('touchmove', (e) => {
            const touchY = e.touches[0].clientY;
            const deltaY = Math.abs(touchY - touchStartY);
            
            // If significant movement, cancel the tap
            if (deltaY > 10) {
              card.classList.remove('touch-active');
            }
          }, { passive: true });
          
          card.addEventListener('touchend', (e) => {
            const touchEndTime = Date.now();
            const touchDuration = touchEndTime - touchStartTime;
            
            card.classList.remove('touch-active');
            
            // Only trigger if it was a tap (not a scroll or long press)
            if (touchDuration < 500 && touchDuration > 50) {
              e.preventDefault();
              handleCardSelection(card);
            }
          });
          
          card.addEventListener('touchcancel', () => {
            card.classList.remove('touch-active');
          });
        });
        
        function handleCardSelection(card) {
          const memberData = card.getAttribute('data-member');
          if (memberData) {
            try {
              const member = JSON.parse(memberData);
              if (typeof window.openModal === 'function') {
                // Add slight delay for visual feedback
                setTimeout(() => {
                  window.openModal(member);
                }, 100);
              } else {
                console.error('openModal function not found.');
              }
            } catch (e) {
              console.error('Failed to parse member data:', e);
            }
          }
        }

        // Reveal animations
        const observer = new IntersectionObserver((entries) => {
          entries.forEach(entry => {
            if (entry.isIntersecting) {
              const delay = parseInt(entry.target.getAttribute('data-reveal-delay') || '0');
              setTimeout(() => {
                entry.target.classList.add('revealed');
              }, delay);
            }
          });
        }, {
          threshold: 0.1
        });

        document.querySelectorAll('[data-reveal]').forEach(el => {
          observer.observe(el);
        });
      });
    </script>